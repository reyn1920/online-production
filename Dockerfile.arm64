# TRAE AI Production Dockerfile - ARM64 Optimized for MacBook Air M1
# Multi-stage build for optimal performance and size

# Stage 1: Build stage with development dependencies
FROM --platform=linux/arm64 python:3.11-slim as builder

# Set ARM64 specific environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PLATFORM=linux/arm64 \
    ARCH=arm64

# Install system dependencies optimized for ARM64
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    libffi-dev \
    libssl-dev \
    libxml2-dev \
    libxslt1-dev \
    libjpeg-dev \
    libpng-dev \
    libwebp-dev \
    libopenblas-dev \
    liblapack-dev \
    gfortran \
    pkg-config \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Upgrade pip and install wheel
RUN pip install --upgrade pip setuptools wheel

# Copy requirements and install Python dependencies
COPY requirements-m1.txt /tmp/requirements.txt
RUN pip install --no-cache-dir -r /tmp/requirements.txt

# Stage 2: Production stage
FROM --platform=linux/arm64 python:3.11-slim as production

# Set production environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PATH="/opt/venv/bin:$PATH" \
    PLATFORM=linux/arm64 \
    ARCH=arm64 \
    ENVIRONMENT=production \
    WORKERS=4 \
    MAX_REQUESTS=1000 \
    TIMEOUT=30 \
    KEEPALIVE=2

# Install runtime dependencies only
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
    libxml2 \
    libxslt1.1 \
    libjpeg62-turbo \
    libpng16-16 \
    libwebp7 \
    libopenblas0 \
    liblapack3 \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy virtual environment from builder stage
COPY --from=builder /opt/venv /opt/venv

# Create non-root user for security
RUN groupadd -r traeai && useradd -r -g traeai traeai

# Create application directory
WORKDIR /app

# Copy application code
COPY --chown=traeai:traeai . /app/

# Create necessary directories
RUN mkdir -p /app/logs /app/uploads /app/cache /app/tmp \
    && chown -R traeai:traeai /app

# Copy optimized configuration files
COPY --chown=traeai:traeai gunicorn.conf.py /app/
COPY --chown=traeai:traeai startup.sh /app/
RUN chmod +x /app/startup.sh

# Switch to non-root user
USER traeai

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Expose port
EXPOSE 8000

# Start application with optimized configuration
CMD ["/app/startup.sh"]

# ARM64 Optimization Labels
LABEL architecture="arm64" \
      platform="linux/arm64" \
      optimized-for="MacBook Air M1" \
      memory="16GB" \
      version="2.0.0" \
      maintainer="TRAE AI Production Team"
