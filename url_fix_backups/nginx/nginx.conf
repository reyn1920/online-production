# TRAE.AI Production Nginx Configuration
# High-performance reverse proxy and load balancer

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Optimize worker connections
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;

    # Connection Limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Upstream servers
    upstream orchestrator {
        least_conn;
        server orchestrator:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream content_agent {
        least_conn;
        server content-agent:8001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream marketing_agent {
        least_conn;
        server marketing-agent:8002 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream monetization_bundle {
        least_conn;
        server monetization-bundle:8003 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream analytics_dashboard {
        least_conn;
        server analytics-dashboard:8004 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream grafana {
        server grafana:3000;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:;" always;

    # Hide nginx version
    server_tokens off;

    # Main server block
    server {
        listen 80;
        listen [::]:80;
        server_name _;

        # Redirect HTTP to HTTPS in production
        # Uncomment the following lines when SSL is configured
        # return 301 https://$server_name$request_uri;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Orchestrator API (main entry point)
        location /api/ {
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://orchestrator;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;

            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Content Agent direct access
        location /content/ {
            limit_req zone=api burst=15 nodelay;

            rewrite ^/content/(.*) /api/$1 break;
            proxy_pass http://content_agent;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Extended timeout for content generation
            proxy_connect_timeout 30s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
        }

        # Marketing Agent direct access
        location /marketing/ {
            limit_req zone=api burst=15 nodelay;

            rewrite ^/marketing/(.*) /api/$1 break;
            proxy_pass http://marketing_agent;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # Monetization Bundle direct access
        location /monetization/ {
            limit_req zone=api burst=10 nodelay;

            rewrite ^/monetization/(.*) /api/$1 break;
            proxy_pass http://monetization_bundle;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # Revenue Tracker direct access
        location /revenue/ {
            limit_req zone=api burst=20 nodelay;

            rewrite ^/revenue/(.*) /api/$1 break;
            proxy_pass http://revenue_tracker;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 30s;
            proxy_send_timeout 180s;
            proxy_read_timeout 180s;
        }

        # Grafana monitoring dashboard
        location /grafana/ {
            proxy_pass http://grafana/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Grafana specific headers
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
        }

        # Prometheus metrics (restricted access)
        location /metrics {
            # Restrict to internal networks only
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            allow 127.0.0.1;
            deny all;

            proxy_pass http://orchestrator/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # File uploads (with size limits)
        location /upload {
            limit_req zone=upload burst=5 nodelay;
            client_max_body_size 500M;

            proxy_pass http://orchestrator/api/upload;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Extended timeouts for large uploads
            proxy_connect_timeout 60s;
            proxy_send_timeout 1800s;
            proxy_read_timeout 1800s;

            # Disable buffering for large files
            proxy_request_buffering off;
        }

        # WebSocket support for real-time features
        location /ws {
            proxy_pass http://orchestrator;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket specific timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        # Static files (if any)
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";

            # Security for static files
            location ~* \.(php|jsp|cgi)$ {
                deny all;
            }
        }

        # Media files (generated content)
        location /media/ {
            alias /var/www/media/;
            expires 1d;
            add_header Cache-Control "public";

            # Prevent execution of scripts
            location ~* \.(php|jsp|cgi|py|sh)$ {
                deny all;
            }
        }

        # API documentation
        location /docs {
            proxy_pass http://orchestrator/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # OpenAPI schema
        location /openapi.json {
            proxy_pass http://orchestrator/openapi.json;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Default location - return API information
        location / {
            return 200 '{"service":"TRAE.AI Production API","version":"1.0.0","status":"online","endpoints":{"/api/":"Main API","/docs":"API Documentation","/health":"Health Check","/grafana/":"Monitoring Dashboard"}}';
            add_header Content-Type application/json;
        }

        # Security: Block common attack patterns
        location ~* \.(env|git|svn|htaccess|htpasswd)$ {
            deny all;
            return 404;
        }

        # Block access to sensitive files
        location ~* \.(sql|log|conf)$ {
            deny all;
            return 404;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /404.html {
            return 404 '{"error":"Not Found","message":"The requested resource was not found"}';
            add_header Content-Type application/json;
        }

        location = /50x.html {
            return 500 '{"error":"Internal Server Error","message":"The server encountered an internal error"}';
            add_header Content-Type application/json;
        }
    }

    # HTTPS server block (uncomment and configure when SSL certificates are available)
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name your-domain.com;
    #
    #     # SSL configuration
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_session_timeout 1d;
    #     ssl_session_cache shared:SSL:50m;
    #     ssl_session_tickets off;
    #
    #     # Modern SSL configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #
    #     # Include the same location blocks as the HTTP server
    #     # ... (copy all location blocks from above)
    # }

    # Server for internal health checks
    server {
        listen 8080;
        server_name localhost;

        location /nginx-health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }

        location /nginx-status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }
}

# Stream block for TCP/UDP load balancing (if needed)
# stream {
#     upstream backend {
#         server backend1.example.com:12345;
#         server backend2.example.com:12345;
#     }
#
#     server {
#         listen 12345;
#         proxy_pass backend;
#     }
# }
