# Netlify Configuration for TRAE AI Production Deployment

[build]
  # Build command for Python application
  command = "pip install -r requirements.txt && python -c 'print(\"Build completed successfully\")'"
  # Publish directory
  publish = "."
  # Functions directory for serverless functions
  functions = "netlify/functions"

[build.environment]
  # Python version
  PYTHON_VERSION = "3.11"
  # Node version for any frontend tooling
  NODE_VERSION = "18"

# Production deployment settings
[context.production]
  command = "pip install -r requirements.txt && python -c 'import sys; print(f\"Python {sys.version} ready for production\")')"
  
  [context.production.environment]
    NODE_ENV = "production"
    PYTHON_ENV = "production"
    DASHBOARD_DEBUG = "false"
    LOG_LEVEL = "INFO"
    SECURE_SSL_REDIRECT = "true"
    SESSION_COOKIE_SECURE = "true"
    CSRF_COOKIE_SECURE = "true"

# Staging/branch deployment settings
[context.branch-deploy]
  command = "pip install -r requirements.txt && python -c 'import sys; print(f\"Python {sys.version} ready for staging\")')"
  
  [context.branch-deploy.environment]
    NODE_ENV = "staging"
    PYTHON_ENV = "staging"
    DASHBOARD_DEBUG = "true"
    LOG_LEVEL = "DEBUG"

# Deploy preview settings
[context.deploy-preview]
  command = "pip install -r requirements.txt && python -c 'import sys; print(f\"Python {sys.version} ready for preview\")')"
  
  [context.deploy-preview.environment]
    NODE_ENV = "preview"
    PYTHON_ENV = "preview"
    DASHBOARD_DEBUG = "true"
    LOG_LEVEL = "DEBUG"

# Headers for security
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:;"
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"
    Permissions-Policy = "geolocation=(), microphone=(), camera=()"

# Redirects for SPA routing (if needed)
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/:splat"
  status = 200

[[redirects]]
  from = "/*"
  to = "/app/static/index.html"
  status = 200
  conditions = {Role = ["admin"], Country = ["US", "GB", "CA", "AU"]}

# Form handling (if needed)
[forms]
  # Enable Netlify Forms
  
# Functions configuration
[functions]
  # Directory for serverless functions
  directory = "netlify/functions/"
  # Node.js runtime for functions
  node_bundler = "esbuild"

# Plugin configuration
[[plugins]]
  package = "@netlify/plugin-lighthouse"
  
  [plugins.inputs]
    output_path = "reports/lighthouse.html"

# Environment-specific redirects
[[context.production.redirects]]
  from = "/health"
  to = "/.netlify/functions/health-check"
  status = 200

[[context.staging.redirects]]
  from = "/debug"
  to = "/.netlify/functions/debug-info"
  status = 200