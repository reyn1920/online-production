{
  "files": [
    {
      "file": "add_reports_table.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "agents/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "agents/base_agents.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "agents/content_evolution_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "agents/evolution_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "agents/financial_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "agents/financial_management_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "agents/growth_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "agents/marketing_tools.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "agents/niche_domination_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "agents/research_tools.py",
      "actions": [
        "closed single-line quote at line 1242",
        "commented line 1243"
      ],
      "result": "parsed_after_comment"
    },
    {
      "file": "agents/safe_mode_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "agents/self_repair_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "agents/specialized_agents.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unindent does not match any outer indentation level (specialized_agents.py, line 1628)",
        "lineno": 1628,
        "offset": 52
      }
    },
    {
      "file": "agents/stealth_automation_agent.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (stealth_automation_agent.py, line 211)",
        "lineno": 211,
        "offset": 16
      }
    },
    {
      "file": "agents/strategic_advisor_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "agents/system_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "agents/twitter_engagement_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "agents/twitter_promotion_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "agents/web_automation_tools.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (web_automation_tools.py, line 580)",
        "lineno": 580,
        "offset": 16
      }
    },
    {
      "file": "ai_ceo_master_controller.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "ai_debug_assistant.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (ai_debug_assistant.py, line 52)",
        "lineno": 52,
        "offset": 8
      }
    },
    {
      "file": "ai_error_fixer.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "ai_video_pipeline.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "ai_web_assistant.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "analytics-dashboard/main.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_config_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_deployment_orchestrator.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (api_deployment_orchestrator.py, line 84)",
        "lineno": 84,
        "offset": 16
      }
    },
    {
      "file": "api_integration_validator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_integrations/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_integrations/arxiv_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_integrations/base_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_integrations/github_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_integrations/google_trends.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_integrations/groq_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_integrations/guardian_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_integrations/huggingface_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_integrations/nytimes_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_integrations/pexels_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_integrations/reddit_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_integrations/youtube_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_master_dashboard.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_opportunity_finder.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_registration_automation.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_registration_executor.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_security_compliance.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_status_dashboard.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "api_testing_suite.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/actions.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/actions_maxout.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/ai_integrated_dashboard.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "expected 'except' or 'finally' block (ai_integrated_dashboard.py, line 178)",
        "lineno": 178,
        "offset": 4
      }
    },
    {
      "file": "app/analytics.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/api/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/api/v1/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/api/v1/router.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/auth.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/bridge_to_system.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/core/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/core/config.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/core/database.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/core/logger.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/dashboard.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/dashboard_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/integrations/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/integrations/monitor.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/integrations/registry.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/main.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/metrics.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/middleware/log_headers.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/middleware/set_content_length.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/middleware/strip_content_length.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/quality_dashboard.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/routers/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/routers/affiliate_credentials.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/routers/avatar.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/routers/avatar_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/routers/content.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/routers/dashboard.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/routers/financial.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/routers/integrations_max.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/routers/monetization.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/routers/oauth.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/routers/paste.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/routers/places.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/security_middleware.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/system_smoke_test_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/utils/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/utils/health.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "app/websocket_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "automated_go_live_verification.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "automation_controller.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "autonomous_decision_engine.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agentic_protocol.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/api_discovery_engine.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/base44_agent_protocol.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/base_agents.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/collaboration_outreach_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/community_engagement_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/conservative_research_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/content_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/content_evolution_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/enhanced_web_scraping_tools.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/evolution_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/financial_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/financial_management_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/growth_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/marketing_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/marketing_tools.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/monetization_services_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/niche_domination_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/performance_analytics_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/planner_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/predictive_analytics_engine.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/research_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/research_tools.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/safe_mode_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/self_repair_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/specialized_agents.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/stealth_automation_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/strategic_advisor_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/system_agent.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (system_agent.py, line 1171)",
        "lineno": 1171,
        "offset": 9
      }
    },
    {
      "file": "backend/agents/system_smoke_test_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/twitter_engagement_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/twitter_promotion_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/web_automation_tools.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/agents/youtube_engagement_agent.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/ai_benchmark_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/ai_intelligent_router.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/ai_intelligent_router_simple.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/api/api_discovery_routes.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/api/pet_endpoints.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/api_monetization.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/api_opportunity_finder.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/api_orchestrator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/api_orchestrator_enhanced.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/api_orchestrator_enhanced_backup.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "expected an indented block after 'if' statement on line 335 (api_orchestrator_enhanced_backup.py, line 336)",
        "lineno": 336,
        "offset": 13
      }
    },
    {
      "file": "backend/api_orchestrator_example.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/app.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/automation/self_healing_pipeline.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/autonomous_diagnosis_repair.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/avatar/background_remover.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/avatar/channel_avatar_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/avatar/golden_ratio_generator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/avatar_pipeline.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/compliance/audit_logger.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/compliance/compliance_monitor.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/content/ai_inpainting.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/content/ai_video_editing.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/content/ai_video_editor.py",
      "actions": [
        "appended closers at EOF: ]"
      ],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (ai_video_editor.py, line 675)",
        "lineno": 675,
        "offset": 24
      }
    },
    {
      "file": "backend/content/animate_avatar.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/content/audio_post_production.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (audio_post_production.py, line 539)",
        "lineno": 539,
        "offset": 16
      }
    },
    {
      "file": "backend/content/audio_postprod.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "expected an indented block after 'if' statement on line 474 (audio_postprod.py, line 475)",
        "lineno": 475,
        "offset": 17
      }
    },
    {
      "file": "backend/content/automated_author.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/content/blender_compositor.py",
      "actions": [
        "closed single-line quote at line 804"
      ],
      "result": "still_fails",
      "error": {
        "msg": "closing parenthesis ')' does not match opening parenthesis '[' on line 791 (blender_compositor.py, line 805)",
        "lineno": 805,
        "offset": 16
      }
    },
    {
      "file": "backend/content/channel_intelligence_feeds.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/content/channel_personas.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/content/dedicated_knowledge_bases.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/content/evidence_based_scripting.py",
      "actions": [
        "appended closers at EOF: ]]]]"
      ],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (evidence_based_scripting.py, line 175)",
        "lineno": 175,
        "offset": 20
      }
    },
    {
      "file": "backend/content/humor_style_db.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/content/relentless_optimization.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (relentless_optimization.py, line 537)",
        "lineno": 537,
        "offset": 42
      }
    },
    {
      "file": "backend/content/right_perspective_firewall.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/content/universal_channel_protocol.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/content/vidscript_pro.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/content/weekly_content_generator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/core/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/core/channel_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/core/ci.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/core/database.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/core/database_production.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (database_production.py, line 32)",
        "lineno": 32,
        "offset": 8
      }
    },
    {
      "file": "backend/core/db.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/core/secret_store_bridge.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/core/settings.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/core/task_queue.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/dashboard/actions_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/dashboard/actions_bus.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/dashboard/sandbox.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/dashboard/total_access_dashboard.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/database/chat_db.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/database/db_singleton.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/database/hypocrisy_db_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/database_setup.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/davinci_resolve_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/ecommerce_marketing_layer.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/engines/hypocrisy_engine.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/engines/video_engine.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/enhancement/pipeline_enhancement_system.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/health_monitor.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/hollywood_creative_pipeline.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integration/master_control_system.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "expected an indented block after function definition on line 72 (master_control_system.py, line 73)",
        "lineno": 73,
        "offset": 9
      }
    },
    {
      "file": "backend/integrations/audacity_automation.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unindent does not match any outer indentation level (audacity_automation.py, line 326)",
        "lineno": 326,
        "offset": 55
      }
    },
    {
      "file": "backend/integrations/creative_studio_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/crewai_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/distributed_config.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/distributed_processing.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/facebook_integration.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "expected an indented block after function definition on line 33 (facebook_integration.py, line 34)",
        "lineno": 34,
        "offset": 9
      }
    },
    {
      "file": "backend/integrations/gimp_automation.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/images_adapter.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/instagram_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/linkedin_integration.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "expected an indented block after function definition on line 33 (linkedin_integration.py, line 34)",
        "lineno": 34,
        "offset": 9
      }
    },
    {
      "file": "backend/integrations/llm/ollama_adapter.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/mcp_protocol.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/n8n_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/news_adapter.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/obs_automation.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (obs_automation.py, line 171)",
        "lineno": 171,
        "offset": 8
      }
    },
    {
      "file": "backend/integrations/ollama_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/pets_adapter.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/pinterest_integration.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "expected an indented block after function definition on line 29 (pinterest_integration.py, line 32)",
        "lineno": 32,
        "offset": 9
      }
    },
    {
      "file": "backend/integrations/reddit_integration.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "expected an indented block after function definition on line 39 (reddit_integration.py, line 42)",
        "lineno": 42,
        "offset": 9
      }
    },
    {
      "file": "backend/integrations/research_validation_service.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/supabase_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/tiktok_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/twitter_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/unified_api_layer.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/video/ffmpeg_builder.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/weather_adapter.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/worker_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/integrations/youtube_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/logging_tune.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/m1_optimizer.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (m1_optimizer.py, line 276)",
        "lineno": 276,
        "offset": 16
      }
    },
    {
      "file": "backend/marketing/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/marketing/affiliate_embed.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/marketing/affiliate_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/marketing_monetization_engine.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/media/unified_media_hub.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/media/workflow_engine.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/monitoring/alert_manager.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unindent does not match any outer indentation level (alert_manager.py, line 770)",
        "lineno": 770,
        "offset": 39
      }
    },
    {
      "file": "backend/monitoring/health_monitor.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/monitoring/monitoring_dashboard.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/monitoring/monitoring_orchestrator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/monitoring/system_health_monitor.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/monitoring/zero_cost_monitoring_stack.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/orchestrator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/payment_processor.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/performance/timeout_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/pipelines/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/pipelines/blender_handoff.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/pipelines/blender_scripts/avatar_creator.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (avatar_creator.py, line 81)",
        "lineno": 81,
        "offset": 8
      }
    },
    {
      "file": "backend/pipelines/davinci_resolve_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/pipelines/enhanced_blender_pipeline.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/pipelines/hollywood_pipeline.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/pipelines/resolve_handoff.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/production_init.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/reference_quality_validator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/revenue/revenue_optimization_system.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/revenue_streams_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/routers/analytics_hub.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/routers/chat.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/routers/davinci_resolve.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/routers/payment_webhooks.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/routers/production_health.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/routers/social.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/routers/system_software.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/rule1_scanner.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (rule1_scanner.py, line 256)",
        "lineno": 256,
        "offset": 52
      }
    },
    {
      "file": "backend/runner/channel_executor.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/scrapers/news_scraper.py",
      "actions": [
        "closed single-line quote at line 35",
        "commented line 36"
      ],
      "result": "parsed_after_comment"
    },
    {
      "file": "backend/scrapers/youtube_scraper.py",
      "actions": [
        "closed single-line quote at line 33",
        "commented line 34"
      ],
      "result": "parsed_after_comment"
    },
    {
      "file": "backend/secret_store.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/secure_secret_store.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/security/auth_framework.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/security/auth_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/security/compliance_validator.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (compliance_validator.py, line 140)",
        "lineno": 140,
        "offset": 66
      }
    },
    {
      "file": "backend/security/content_validator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/security/security_scanner.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "closing parenthesis ']' does not match opening parenthesis '{' on line 98 (security_scanner.py, line 99)",
        "lineno": 99,
        "offset": 80
      }
    },
    {
      "file": "backend/security/webhook_security.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/ai_browser_automation.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/ai_revenue_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/api_aggregation_engine.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/api_discovery_service.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/api_integration_service.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/auto_discovery_service.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/automated_model_generator.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (automated_model_generator.py, line 155)",
        "lineno": 155,
        "offset": 12
      }
    },
    {
      "file": "backend/services/avatar_engines.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/backup_generator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/cost_tracking_service.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/email_service_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/enterprise_api_orchestrator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/free_api_catalog.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/health_monitor.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (health_monitor.py, line 1024)",
        "lineno": 1024,
        "offset": 8
      }
    },
    {
      "file": "backend/services/model_validator.py",
      "actions": [
        "appended closers at EOF: )"
      ],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (model_validator.py, line 2023)",
        "lineno": 2023,
        "offset": 1
      }
    },
    {
      "file": "backend/services/performance_monitor.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (performance_monitor.py, line 316)",
        "lineno": 316,
        "offset": 12
      }
    },
    {
      "file": "backend/services/pet_care_apis.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/redundancy_manager.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (redundancy_manager.py, line 473)",
        "lineno": 473,
        "offset": 9
      }
    },
    {
      "file": "backend/services/reliable_model_generator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/retry_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/rss_watcher.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/stress_tester.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (stress_tester.py, line 1208)",
        "lineno": 1208,
        "offset": 8
      }
    },
    {
      "file": "backend/services/unified_ai_service.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/services/web_search_service.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (web_search_service.py, line 297)",
        "lineno": 297,
        "offset": 12
      }
    },
    {
      "file": "backend/task_queue_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/testing/automated_test_suite.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/trae_ai_orchestrator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/tts_engine.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/unified_backend.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/util/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/util/logging_tools.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/util/metadata.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/util/pdf_generator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/util/validation.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/util/video_utils.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/utils/rss_singleton.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/validation/content_validator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/youtube_analytics_automation.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/youtube_automation_orchestrator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/youtube_content_pipeline.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/youtube_engagement_automation.py",
      "actions": [
        "closed single-line quote at line 1113"
      ],
      "result": "still_fails",
      "error": {
        "msg": "'(' was never closed (youtube_engagement_automation.py, line 1113)",
        "lineno": 1113,
        "offset": 30
      }
    },
    {
      "file": "backend/youtube_scheduler.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (youtube_scheduler.py, line 424)",
        "lineno": 424,
        "offset": 9
      }
    },
    {
      "file": "backend/youtube_security_compliance.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/youtube_seo_optimizer.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "backend/zero_cost_stack.py",
      "actions": [
        "closed single-line quote at line 461"
      ],
      "result": "still_fails",
      "error": {
        "msg": "unterminated string literal (detected at line 473) (zero_cost_stack.py, line 473)",
        "lineno": 473,
        "offset": 63
      }
    },
    {
      "file": "blender_api_integration_demo.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "bootstrap_trae_ai.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "breaking_news_watcher.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "bulletproof_production_test.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "bulletproof_video_generator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "capabilities_example.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (capabilities_example.py, line 69)",
        "lineno": 69,
        "offset": 12
      }
    },
    {
      "file": "celery_app.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "check_all_integrations.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "check_api_endpoints.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "check_channels_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "check_db_schema.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "check_deployment_readiness.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "check_revenue.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "check_rss_feeds.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "check_task_status.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "check_twitter_creds.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "check_youtube_creds.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "cloud_software_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "complete_integration_status.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "comprehensive_syntax_fixer.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "config/environment.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "config/linly_talker_realistic.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "config/validator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "content-agent/main.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "content_agent/main.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "content_automation_pipeline.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (content_automation_pipeline.py, line 959)",
        "lineno": 959,
        "offset": 16
      }
    },
    {
      "file": "content_sources.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "core_ai_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "create_real_video.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (create_real_video.py, line 312)",
        "lineno": 312,
        "offset": 24
      }
    },
    {
      "file": "create_real_video_v2.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "dashboard.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "dashboard/routellm_dashboard.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "dashboard_diagnostic.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "dashboard_status_report.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "data_persistence/world_bible.py",
      "actions": [
        "closed single-line quote at line 175",
        "commented line 176"
      ],
      "result": "parsed_after_comment"
    },
    {
      "file": "database_validator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "davinci_resolve_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "davinci_voice_cloning.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "debug_breaking_news.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "debug_system.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "debugger_demo.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "demo_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "demo_realistic_avatar.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "demonstrate_research_capabilities.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "deploy/production_config.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (production_config.py, line 156)",
        "lineno": 156,
        "offset": 12
      }
    },
    {
      "file": "deploy_live.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "enhanced_dashboard.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "environment_config_manager.py",
      "actions": [
        "closed \"\"\" at EOF"
      ],
      "result": "still_fails",
      "error": {
        "msg": "unterminated string literal (detected at line 15) (environment_config_manager.py, line 15)",
        "lineno": 15,
        "offset": 4
      }
    },
    {
      "file": "example_image_search.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "examples/routellm_integration_example.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "examples/web_ai_integration_example.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "extract_files_from_paste.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unterminated string literal (detected at line 4) (extract_files_from_paste.py, line 4)",
        "lineno": 4,
        "offset": 4
      }
    },
    {
      "file": "fastapi_performance_baseline.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "final_integration_report.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "find_strategic_task.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "fix_agents.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "fix_all_linting_issues.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "fix_common_syntax_errors.py",
      "actions": [
        "closed single-line quote at line 16"
      ],
      "result": "still_fails",
      "error": {
        "msg": "unterminated string literal (detected at line 17) (fix_common_syntax_errors.py, line 17)",
        "lineno": 17,
        "offset": 1
      }
    },
    {
      "file": "fix_database_schema.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "fix_python_syntax.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "fix_unterminated_strings.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "fix_url_spaces.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "free_api_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "frontend/media_dashboard.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (media_dashboard.py, line 214)",
        "lineno": 214,
        "offset": 12
      }
    },
    {
      "file": "frontend/node_modules/flatted/python/flatted.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "full_ai_integration_activator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "full_automation_pipeline.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "generate_audio_samples.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "generate_first_content.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "generate_production_samples.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "generate_test_video.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "get_task_details.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "go_live_checklist.py",
      "actions": [
        "closed \"\"\" at EOF"
      ],
      "result": "still_fails",
      "error": {
        "msg": "unterminated string literal (detected at line 6) (go_live_checklist.py, line 6)",
        "lineno": 6,
        "offset": 4
      }
    },
    {
      "file": "gunicorn.conf.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "infra/migrations.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "inject_diagnostic_task.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "install_ai_ceo.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "integrate_all_channels.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "integrations/free_api_fallback.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "integrations/mcp_client.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "integrations/puppeteer_service.py",
      "actions": [
        "closed single-line quote at line 58",
        "commented line 59"
      ],
      "result": "parsed_after_comment"
    },
    {
      "file": "integrations/routellm_client.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "integrations/web_ai_client.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "integrations_hub.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "launch_autonomous.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "launch_live.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "launch_live_integrated.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "live_dashboard.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "live_deployment_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "logger.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "main.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "main_app.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "main_minimal.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "marketing-agent/main.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "marketing_agent/main.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "mass_syntax_first_aid.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "master_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "master_orchestrator/business_generators.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "master_orchestrator/main.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "minimal_api_discovery.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "minimal_server.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/ASR/FunASR.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/ASR/OmniSenseVoice.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/ASR/Whisper.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/ASR/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/data/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/data/bucket_sampler.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/data/data_module.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/data/dataset.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (dataset.py, line 278)",
        "lineno": 278,
        "offset": 12
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/models/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/models/t2s_lightning_module.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/models/t2s_lightning_module_onnx.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/models/t2s_model.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (t2s_model.py, line 208)",
        "lineno": 208,
        "offset": 11
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/models/t2s_model_onnx.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/models/utils.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (utils.py, line 89)",
        "lineno": 89,
        "offset": 5
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/modules/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/modules/activation.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (activation.py, line 158)",
        "lineno": 158,
        "offset": 20
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/modules/activation_onnx.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (activation_onnx.py, line 92)",
        "lineno": 92,
        "offset": 20
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/modules/embedding.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/modules/embedding_onnx.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/modules/lr_schedulers.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/modules/optim.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (optim.py, line 240)",
        "lineno": 240,
        "offset": 10
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/modules/patched_mha_with_cache.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (patched_mha_with_cache.py, line 365)",
        "lineno": 365,
        "offset": 11
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/modules/patched_mha_with_cache_onnx.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/modules/scaling.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (scaling.py, line 62)",
        "lineno": 62,
        "offset": 5
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/modules/transformer.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/modules/transformer_onnx.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/text_processing/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/text_processing/phonemizer.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/text_processing/symbols.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/utils/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/utils/initialize.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/AR/utils/io.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/feature_extractor/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/feature_extractor/cnhubert.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (cnhubert.py, line 45)",
        "lineno": 45,
        "offset": 26
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/feature_extractor/whisper_enc.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/inference_gui.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/inference_webui.py",
      "actions": [
        "appended closers at EOF: )"
      ],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (inference_webui.py, line 520)",
        "lineno": 520,
        "offset": 10
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/module/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/module/attentions.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/module/attentions_onnx.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/module/commons.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/module/core_vq.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/module/data_utils.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/module/losses.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/module/mel_processing.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/module/models.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (models.py, line 764)",
        "lineno": 764,
        "offset": 16
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/module/models_onnx.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (models_onnx.py, line 760)",
        "lineno": 760,
        "offset": 16
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/module/modules.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/module/mrte_model.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/module/quantize.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (quantize.py, line 22)",
        "lineno": 22,
        "offset": 8
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/module/transforms.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/my_utils.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/onnx_export.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/prepare_datasets/1-get-text.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/prepare_datasets/2-get-hubert-wav32k.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/prepare_datasets/3-get-semantic.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (3-get-semantic.py, line 70)",
        "lineno": 70,
        "offset": 9
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/process_ckpt.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/s1_train.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (s1_train.py, line 175)",
        "lineno": 175,
        "offset": 92
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/s2_train.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (s2_train.py, line 135)",
        "lineno": 135,
        "offset": 15
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/text/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/text/chinese.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/text/cleaner.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/text/english.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/text/japanese.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/text/symbols.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/text/tone_sandhi.py",
      "actions": [
        "closed single-line quote at line 673"
      ],
      "result": "still_fails",
      "error": {
        "msg": "unterminated string literal (detected at line 673); perhaps you escaped the end quote? (tone_sandhi.py, line 673)",
        "lineno": 673,
        "offset": 34
      }
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/text/zh_normalization/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/text/zh_normalization/char_convert.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/text/zh_normalization/chronology.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/text/zh_normalization/constants.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/text/zh_normalization/num.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/text/zh_normalization/phonecode.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/text/zh_normalization/quantifier.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/text/zh_normalization/text_normlization.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/GPT_SoVITS/utils.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (utils.py, line 209)",
        "lineno": 209,
        "offset": 64
      }
    },
    {
      "file": "models/linly_talker/LLM/ChatGLM.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/LLM/ChatGPT.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/LLM/GPT4Free.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/LLM/Gemini.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/LLM/Linly-api-fast.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/LLM/Linly.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/LLM/Llama2Chinese.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "expected 'except' or 'finally' block (Llama2Chinese.py, line 112)",
        "lineno": 112,
        "offset": 4
      }
    },
    {
      "file": "models/linly_talker/LLM/QAnything.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/LLM/Qwen.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/LLM/Qwen2.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "expected an indented block after 'try' statement on line 41 (Qwen2.py, line 43)",
        "lineno": 43,
        "offset": 4
      }
    },
    {
      "file": "models/linly_talker/LLM/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/LLM/llamacppchat.py",
      "actions": [
        "closed single-line quote at line 31"
      ],
      "result": "still_fails",
      "error": {
        "msg": "unterminated string literal (detected at line 31) (llamacppchat.py, line 31)",
        "lineno": 31,
        "offset": 35
      }
    },
    {
      "file": "models/linly_talker/LLM/template.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/models/unet.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/models/vae.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (vae.py, line 41)",
        "lineno": 41,
        "offset": 12
      }
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/blending.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/dwpose/default_runtime.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/dwpose/rtmpose-l_8xb32-270e_coco-ubody-wholebody-384x288.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/face_detection/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/face_detection/api.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (api.py, line 241)",
        "lineno": 241,
        "offset": 17
      }
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/face_detection/detection/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/face_detection/detection/core.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/face_detection/detection/sfd/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/face_detection/detection/sfd/bbox.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/face_detection/detection/sfd/detect.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/face_detection/detection/sfd/net_s3fd.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/face_detection/detection/sfd/sfd_detector.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (sfd_detector.py, line 28)",
        "lineno": 28,
        "offset": 12
      }
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/face_detection/models.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/face_detection/utils.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/face_parsing/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/face_parsing/model.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/face_parsing/resnet.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/preprocessing.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unterminated f-string literal (detected at line 93) (preprocessing.py, line 93)",
        "lineno": 93,
        "offset": 18
      }
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/utils/utils.py",
      "actions": [
        "commented line 11"
      ],
      "result": "parsed_after_comment"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/whisper/audio2feature.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/whisper/whisper/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/whisper/whisper/__main__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/whisper/whisper/audio.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "expected an indented block after 'try' statement on line 40 (audio.py, line 42)",
        "lineno": 42,
        "offset": 5
      }
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/whisper/whisper/decoding.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (decoding.py, line 135)",
        "lineno": 135,
        "offset": 8
      }
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/whisper/whisper/model.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "expected an indented block after 'if' statement on line 88 (model.py, line 90)",
        "lineno": 90,
        "offset": 4
      }
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/whisper/whisper/normalizers/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/whisper/whisper/normalizers/basic.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/whisper/whisper/normalizers/english.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (english.py, line 301)",
        "lineno": 301,
        "offset": 28
      }
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/whisper/whisper/tokenizer.py",
      "actions": [
        "appended closers at EOF: )))]"
      ],
      "result": "still_fails",
      "error": {
        "msg": "invalid character '\u266a' (U+266A) (tokenizer.py, line 284)",
        "lineno": 284,
        "offset": 75
      }
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/whisper/whisper/transcribe.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (transcribe.py, line 133)",
        "lineno": 133,
        "offset": 12
      }
    },
    {
      "file": "models/linly_talker/Musetalk/musetalk/whisper/whisper/utils.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/scripts/inference.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Musetalk/scripts/realtime_inference.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unterminated f-string literal (detected at line 151) (realtime_inference.py, line 151)",
        "lineno": 151,
        "offset": 21
      }
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/deepspeech_features/deepspeech_features.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/deepspeech_features/deepspeech_store.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/deepspeech_features/extract_ds_features.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/deepspeech_features/extract_wav.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/deepspeech_features/fea_win.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/face_parsing/logger.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/face_parsing/model.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/face_parsing/resnet.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/face_parsing/test.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/face_tracking/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/face_tracking/convert_BFM.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/face_tracking/data_loader.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/face_tracking/face_tracker.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (face_tracker.py, line 100)",
        "lineno": 100,
        "offset": 23
      }
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/face_tracking/facemodel.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/face_tracking/geo_transform.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/face_tracking/render_3dmm.py",
      "actions": [
        "closed single-line quote at line 60"
      ],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (render_3dmm.py, line 61)",
        "lineno": 61,
        "offset": 16
      }
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/face_tracking/render_land.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/face_tracking/util.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/hubert.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (hubert.py, line 35)",
        "lineno": 35,
        "offset": 8
      }
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/process.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (process.py, line 189)",
        "lineno": 189,
        "offset": 16
      }
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/wav2mel.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/data_utils/wav2mel_hparams.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (wav2mel_hparams.py, line 23)",
        "lineno": 23,
        "offset": 5
      }
    },
    {
      "file": "models/linly_talker/NeRF/encoding.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/freqencoder/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/freqencoder/backend.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/freqencoder/freq.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/freqencoder/setup.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/gridencoder/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/gridencoder/backend.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/gridencoder/grid.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (grid.py, line 222)",
        "lineno": 222,
        "offset": 24
      }
    },
    {
      "file": "models/linly_talker/NeRF/gridencoder/setup.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/nerf_triplane/asr.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid decimal literal (asr.py, line 64)",
        "lineno": 64,
        "offset": 47
      }
    },
    {
      "file": "models/linly_talker/NeRF/nerf_triplane/gui.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ']' (gui.py, line 25)",
        "lineno": 25,
        "offset": 6
      }
    },
    {
      "file": "models/linly_talker/NeRF/nerf_triplane/network.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (network.py, line 378)",
        "lineno": 378,
        "offset": 12
      }
    },
    {
      "file": "models/linly_talker/NeRF/nerf_triplane/provider.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (provider.py, line 171)",
        "lineno": 171,
        "offset": 61
      }
    },
    {
      "file": "models/linly_talker/NeRF/nerf_triplane/renderer.py",
      "actions": [
        "appended closers at EOF: ]]]]]"
      ],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (renderer.py, line 93)",
        "lineno": 93,
        "offset": 5
      }
    },
    {
      "file": "models/linly_talker/NeRF/nerf_triplane/utils.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (utils.py, line 1231)",
        "lineno": 1231,
        "offset": 56
      }
    },
    {
      "file": "models/linly_talker/NeRF/nerf_triplane/wav2vec.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid decimal literal (wav2vec.py, line 64)",
        "lineno": 64,
        "offset": 47
      }
    },
    {
      "file": "models/linly_talker/NeRF/raymarching/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/raymarching/backend.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/raymarching/raymarching.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/raymarching/setup.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/shencoder/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/shencoder/backend.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/shencoder/setup.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/NeRF/shencoder/sphere_harmonics.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Qwen/Qwen-1_8B-Chat/configuration_qwen.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Qwen/Qwen-1_8B-Chat/cpp_kernels.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (cpp_kernels.py, line 30)",
        "lineno": 30,
        "offset": 4
      }
    },
    {
      "file": "models/linly_talker/Qwen/Qwen-1_8B-Chat/modeling_qwen.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected character after line continuation character (modeling_qwen.py, line 92)",
        "lineno": 92,
        "offset": 47
      }
    },
    {
      "file": "models/linly_talker/Qwen/Qwen-1_8B-Chat/qwen_generation_utils.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/Qwen/Qwen-1_8B-Chat/tokenization_qwen.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unterminated f-string literal (detected at line 90) (tokenization_qwen.py, line 90)",
        "lineno": 90,
        "offset": 33
      }
    },
    {
      "file": "models/linly_talker/TFG/MuseTalk.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (MuseTalk.py, line 861)",
        "lineno": 861,
        "offset": 16
      }
    },
    {
      "file": "models/linly_talker/TFG/MuseV.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected character after line continuation character (MuseV.py, line 53)",
        "lineno": 53,
        "offset": 50
      }
    },
    {
      "file": "models/linly_talker/TFG/NeRFTalk.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/TFG/SadTalker.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (SadTalker.py, line 89)",
        "lineno": 89,
        "offset": 16
      }
    },
    {
      "file": "models/linly_talker/TFG/Wav2Lip.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (Wav2Lip.py, line 303)",
        "lineno": 303,
        "offset": 25
      }
    },
    {
      "file": "models/linly_talker/TFG/Wav2Lipv2.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (Wav2Lipv2.py, line 526)",
        "lineno": 526,
        "offset": 20
      }
    },
    {
      "file": "models/linly_talker/TFG/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/TTS/EdgeTTS.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (EdgeTTS.py, line 431)",
        "lineno": 431,
        "offset": 12
      }
    },
    {
      "file": "models/linly_talker/TTS/PaddleTTS.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/TTS/XTTS.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (XTTS.py, line 26)",
        "lineno": 26,
        "offset": 18
      }
    },
    {
      "file": "models/linly_talker/TTS/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/TTS/edge_app.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/TTS/paddletts_app.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/VITS/CosyVoice.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/VITS/GPT_SoVITS.py",
      "actions": [
        "appended closers at EOF: )"
      ],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (GPT_SoVITS.py, line 552)",
        "lineno": 552,
        "offset": 10
      }
    },
    {
      "file": "models/linly_talker/VITS/XTTS.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (XTTS.py, line 85)",
        "lineno": 85,
        "offset": 12
      }
    },
    {
      "file": "models/linly_talker/VITS/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/VITS/app.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/abacus_ai_avatar_page.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/api/llm_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/api/llm_client.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/api/talker_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/api/talker_client.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/api/tts_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/api/tts_client.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/app.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (app.py, line 237)",
        "lineno": 237,
        "offset": 29
      }
    },
    {
      "file": "models/linly_talker/app_img.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (app_img.py, line 188)",
        "lineno": 188,
        "offset": 38
      }
    },
    {
      "file": "models/linly_talker/app_multi.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (app_multi.py, line 41)",
        "lineno": 41,
        "offset": 4
      }
    },
    {
      "file": "models/linly_talker/app_musetalk.py",
      "actions": [
        "appended closers at EOF: ]]]]"
      ],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (app_musetalk.py, line 228)",
        "lineno": 228,
        "offset": 29
      }
    },
    {
      "file": "models/linly_talker/app_talk.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/app_vits.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (app_vits.py, line 272)",
        "lineno": 272,
        "offset": 29
      }
    },
    {
      "file": "models/linly_talker/avatar_api_config.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/configs.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/configs_m1_optimized.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/demo_app.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/face_detection/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/face_detection/api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/face_detection/detection/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/face_detection/detection/core.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/face_detection/detection/sfd/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/face_detection/detection/sfd/bbox.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/face_detection/detection/sfd/detect.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/face_detection/detection/sfd/net_s3fd.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/face_detection/detection/sfd/sfd_detector.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (sfd_detector.py, line 28)",
        "lineno": 28,
        "offset": 12
      }
    },
    {
      "file": "models/linly_talker/face_detection/models.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/face_detection/utils.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/one_button_test.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (one_button_test.py, line 299)",
        "lineno": 299,
        "offset": 8
      }
    },
    {
      "file": "models/linly_talker/png_avatar_processor.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (png_avatar_processor.py, line 175)",
        "lineno": 175,
        "offset": 12
      }
    },
    {
      "file": "models/linly_talker/run_m1_optimized.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/scripts/huggingface_download.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/scripts/install_pytorch3d.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/scripts/modelscope_download.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/Record.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/audio2exp_models/audio2exp.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/audio2exp_models/networks.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/audio2pose_models/audio2pose.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/audio2pose_models/audio_encoder.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (audio_encoder.py, line 86)",
        "lineno": 86,
        "offset": 40
      }
    },
    {
      "file": "models/linly_talker/src/audio2pose_models/cvae.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/audio2pose_models/discriminator.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (discriminator.py, line 43)",
        "lineno": 43,
        "offset": 20
      }
    },
    {
      "file": "models/linly_talker/src/audio2pose_models/networks.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/audio2pose_models/res_unet.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/cost_time.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/data/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/data/base_dataset.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/data/flist_dataset.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/data/image_folder.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/data/template_dataset.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (template_dataset.py, line 67)",
        "lineno": 67,
        "offset": 25
      }
    },
    {
      "file": "models/linly_talker/src/face3d/extract_kp_videos.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/extract_kp_videos_safe.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/backbones/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/backbones/iresnet.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/backbones/iresnet2060.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/backbones/mobilefacenet.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/configs/3millions.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/configs/3millions_pfc.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/configs/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/configs/base.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/configs/glint360k_mbf.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/configs/glint360k_r100.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/configs/glint360k_r18.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/configs/glint360k_r34.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/configs/glint360k_r50.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/configs/ms1mv3_mbf.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/configs/ms1mv3_r18.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/configs/ms1mv3_r2060.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/configs/ms1mv3_r34.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/configs/ms1mv3_r50.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/configs/speed.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/dataset.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (dataset.py, line 20)",
        "lineno": 20,
        "offset": 12
      }
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/eval/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/eval/verification.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (verification.py, line 379)",
        "lineno": 379,
        "offset": 18
      }
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/eval_ijbc.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unindent does not match any outer indentation level (eval_ijbc.py, line 227)",
        "lineno": 227,
        "offset": 75
      }
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/inference.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/losses.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/onnx_helper.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/onnx_ijbc.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (onnx_ijbc.py, line 123)",
        "lineno": 123,
        "offset": 8
      }
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/partial_fc.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (partial_fc.py, line 97)",
        "lineno": 97,
        "offset": 24
      }
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/torch2onnx.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/train.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/utils/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/utils/plot.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/utils/utils_amp.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (utils_amp.py, line 25)",
        "lineno": 25,
        "offset": 12
      }
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/utils/utils_callbacks.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/utils/utils_config.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/utils/utils_logging.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/arcface_torch/utils/utils_os.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/base_model.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (base_model.py, line 49)",
        "lineno": 49,
        "offset": 13
      }
    },
    {
      "file": "models/linly_talker/src/face3d/models/bfm.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (bfm.py, line 401)",
        "lineno": 401,
        "offset": 23
      }
    },
    {
      "file": "models/linly_talker/src/face3d/models/facerecon_model.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (facerecon_model.py, line 197)",
        "lineno": 197,
        "offset": 5
      }
    },
    {
      "file": "models/linly_talker/src/face3d/models/losses.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/networks.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/models/template_model.py",
      "actions": [
        "closed single-line quote at line 84"
      ],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (template_model.py, line 73)",
        "lineno": 73,
        "offset": 5
      }
    },
    {
      "file": "models/linly_talker/src/face3d/options/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/options/base_options.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/options/inference_options.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/options/test_options.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/options/train_options.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/util/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/util/detect_lm68.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/util/generate_list.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/util/html.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/util/load_mats.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/util/my_awing_arch.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/util/nvdiffrast.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (nvdiffrast.py, line 38)",
        "lineno": 38,
        "offset": 13
      }
    },
    {
      "file": "models/linly_talker/src/face3d/util/preprocess.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid decimal literal (preprocess.py, line 117)",
        "lineno": 117,
        "offset": 33
      }
    },
    {
      "file": "models/linly_talker/src/face3d/util/skin_mask.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/util/util.py",
      "actions": [
        "closed single-line quote at line 56",
        "commented line 57"
      ],
      "result": "parsed_after_comment"
    },
    {
      "file": "models/linly_talker/src/face3d/util/visualizer.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/face3d/visualize.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/facerender/animate.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (animate.py, line 115)",
        "lineno": 115,
        "offset": 12
      }
    },
    {
      "file": "models/linly_talker/src/facerender/modules/dense_motion.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (dense_motion.py, line 30)",
        "lineno": 30,
        "offset": 28
      }
    },
    {
      "file": "models/linly_talker/src/facerender/modules/discriminator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/facerender/modules/generator.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (generator.py, line 162)",
        "lineno": 162,
        "offset": 16
      }
    },
    {
      "file": "models/linly_talker/src/facerender/modules/keypoint_detector.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (keypoint_detector.py, line 47)",
        "lineno": 47,
        "offset": 16
      }
    },
    {
      "file": "models/linly_talker/src/facerender/modules/make_animation.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (make_animation.py, line 213)",
        "lineno": 213,
        "offset": 12
      }
    },
    {
      "file": "models/linly_talker/src/facerender/modules/mapping.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/facerender/modules/util.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (util.py, line 669)",
        "lineno": 669,
        "offset": 12
      }
    },
    {
      "file": "models/linly_talker/src/facerender/pirender/base_function.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/facerender/pirender/config.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/facerender/pirender/face_model.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/facerender/pirender_animate.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (pirender_animate.py, line 90)",
        "lineno": 90,
        "offset": 12
      }
    },
    {
      "file": "models/linly_talker/src/facerender/sync_batchnorm/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/facerender/sync_batchnorm/batchnorm.py",
      "actions": [
        "closed single-line quote at line 57"
      ],
      "result": "still_fails",
      "error": {
        "msg": "expected an indented block after function definition on line 55 (batchnorm.py, line 57)",
        "lineno": 57,
        "offset": 5
      }
    },
    {
      "file": "models/linly_talker/src/facerender/sync_batchnorm/comm.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/facerender/sync_batchnorm/replicate.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/facerender/sync_batchnorm/unittest.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/generate_batch.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/generate_facerender_batch.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/hparams.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (hparams.py, line 23)",
        "lineno": 23,
        "offset": 5
      }
    },
    {
      "file": "models/linly_talker/src/models/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/models/conv.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/models/syncnet.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/models/wav2lip.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax. Perhaps you forgot a comma? (wav2lip.py, line 365)",
        "lineno": 365,
        "offset": 5
      }
    },
    {
      "file": "models/linly_talker/src/modelsv2/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/modelsv2/conv.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/modelsv2/syncnet.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/modelsv2/wav2lip_v2.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/test_audio2coeff.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (test_audio2coeff.py, line 118)",
        "lineno": 118,
        "offset": 24
      }
    },
    {
      "file": "models/linly_talker/src/torchalign/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/torchalign/api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/torchalign/backbone/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/torchalign/backbone/hrnet.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/torchalign/backbone/mobilenet.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/torchalign/cfg.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/torchalign/heatmap_head/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/torchalign/heatmap_head/blocks/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/torchalign/heatmap_head/blocks/head_block.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/torchalign/heatmap_head/heatmap_head.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/torchalign/heatmap_head/transforms/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/torchalign/heatmap_head/transforms/functional.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/torchalign/heatmap_head/transforms/module.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/utils/audio.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/utils/croper.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (croper.py, line 136)",
        "lineno": 136,
        "offset": 11
      }
    },
    {
      "file": "models/linly_talker/src/utils/face_enhancer.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "expected an indented block after 'if' statement on line 81 (face_enhancer.py, line 82)",
        "lineno": 82,
        "offset": 9
      }
    },
    {
      "file": "models/linly_talker/src/utils/hparams.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (hparams.py, line 27)",
        "lineno": 27,
        "offset": 5
      }
    },
    {
      "file": "models/linly_talker/src/utils/hparamsv2.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (hparamsv2.py, line 23)",
        "lineno": 23,
        "offset": 5
      }
    },
    {
      "file": "models/linly_talker/src/utils/init_path.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/utils/model2safetensor.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (model2safetensor.py, line 171)",
        "lineno": 171,
        "offset": 12
      }
    },
    {
      "file": "models/linly_talker/src/utils/paste_pic.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/utils/preprocess.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/utils/safetensor_helper.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/utils/text2speech.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/src/utils/utils.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (utils.py, line 38)",
        "lineno": 38,
        "offset": 16
      }
    },
    {
      "file": "models/linly_talker/src/utils/videoio.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "models/linly_talker/webui.py",
      "actions": [
        "appended closers at EOF: ]]]]"
      ],
      "result": "still_fails",
      "error": {
        "msg": "unmatched ')' (webui.py, line 791)",
        "lineno": 791,
        "offset": 52
      }
    },
    {
      "file": "monetization-bundle/main.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "monetization/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "monetization/base_monetization.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "monetization/etsy_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "monetization/gumroad_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "monetization/monetization_manager.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "monetization/paddle_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "monetization/sendowl_api.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "monetization_bundle/main.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (main.py, line 370)",
        "lineno": 370,
        "offset": 12
      }
    },
    {
      "file": "monitoring/error_tracker.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "monitoring/monitoring_dashboard.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "monitoring/performance_monitor.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "monitoring/process_watchdog.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "monitoring/prometheus_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "monitoring/routellm_monitor.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "monitoring/scaling-policies.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "monitoring/self_healing_monitor.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "monitoring_dashboard.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unterminated string literal (detected at line 17) (monitoring_dashboard.py, line 17)",
        "lineno": 17,
        "offset": 4
      }
    },
    {
      "file": "monitoring_system.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "news_driven_content_trigger.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (news_driven_content_trigger.py, line 171)",
        "lineno": 171,
        "offset": 12
      }
    },
    {
      "file": "ollama_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "ops/watchdog.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "orchestrator/main.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "orchestrator/run_orchestrator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "paste_app.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "paste_avatar_improvements.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "paste_integration_demo.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "phoenix_installer.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "process_watchdog.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "production_health_check.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "production_mcp_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "puppeteer_ai_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "python_syntax_error_fixer.py",
      "actions": [
        "appended closers at EOF: ))}}"
      ],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (python_syntax_error_fixer.py, line 264)",
        "lineno": 264,
        "offset": 9
      }
    },
    {
      "file": "quick_lint_fix.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "quick_test.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "real_mcp_ai_assistant.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "revenue_tracker/main.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "expected an indented block after 'else' statement on line 1404 (main.py, line 1406)",
        "lineno": 1406,
        "offset": 4
      }
    },
    {
      "file": "routers/comprehensive_dashboard.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "routing/model_router.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "run_api_discovery.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "run_benchmark.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "run_simple.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "run_tests.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "safe_repo_rewriter.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/database_migration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/db_bootstrap.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/deploy_production.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/deploy_secrets.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/deployment_orchestrator.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (deployment_orchestrator.py, line 614)",
        "lineno": 614,
        "offset": 12
      }
    },
    {
      "file": "scripts/doctor_creative_env.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/environment_validator.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (environment_validator.py, line 230)",
        "lineno": 230,
        "offset": 9
      }
    },
    {
      "file": "scripts/generate_realistic_avatar.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/generate_secure_config.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/go_live_checklist.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/go_live_preparation.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (go_live_preparation.py, line 235)",
        "lineno": 235,
        "offset": 80
      }
    },
    {
      "file": "scripts/load-test.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/manage_db.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/production_deployment.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (production_deployment.py, line 347)",
        "lineno": 347,
        "offset": 53
      }
    },
    {
      "file": "scripts/register_avatar_engines.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/repair-model-generation.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/secrets_cli.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "expected an indented block after 'if' statement on line 63 (secrets_cli.py, line 64)",
        "lineno": 64,
        "offset": 9
      }
    },
    {
      "file": "scripts/security_audit.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "closing parenthesis ']' does not match opening parenthesis '{' on line 68 (security_audit.py, line 76)",
        "lineno": 76,
        "offset": 77
      }
    },
    {
      "file": "scripts/security_scanner.py",
      "actions": [
        "appended closers at EOF: ))"
      ],
      "result": "still_fails",
      "error": {
        "msg": "closing parenthesis ']' does not match opening parenthesis '{' on line 99 (security_scanner.py, line 100)",
        "lineno": 100,
        "offset": 71
      }
    },
    {
      "file": "scripts/setup_creative_environment.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/setup_production_secrets.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/start_distributed_system.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "expected an indented block after 'try' statement on line 123 (start_distributed_system.py, line 124)",
        "lineno": 124,
        "offset": 17
      }
    },
    {
      "file": "scripts/synthesize_release_v3.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "scripts/system_orchestrator.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unterminated f-string literal (detected at line 317) (system_orchestrator.py, line 317)",
        "lineno": 317,
        "offset": 53
      }
    },
    {
      "file": "self_healing_protocols.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "services/avatar_generation_service.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "setup_first_channel.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "setup_routellm.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "setup_twitter_creds.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "setup_youtube_creds.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "shared_utils.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "simple_api_discovery.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "simple_automation_test.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected character after line continuation character (simple_automation_test.py, line 173)",
        "lineno": 173,
        "offset": 69
      }
    },
    {
      "file": "simple_dashboard.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "simple_dashboard_server.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "start_ai_ceo.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "start_fastapi_optimized.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "start_live_system.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "start_news_monitoring.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "start_production.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "startup_orchestrator.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "startup_system.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "store_twitter_keys.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "sublime_automation_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "submit_paste.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "submit_strategic_project.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "system_dashboard.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "system_health_check.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "system_monitor.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "system_monitor_backend.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "tasks/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "tasks/business_automation.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unexpected indent (business_automation.py, line 2)",
        "lineno": 2,
        "offset": 4
      }
    },
    {
      "file": "tasks/content_generation.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (content_generation.py, line 292)",
        "lineno": 292,
        "offset": 5
      }
    },
    {
      "file": "tasks/document_processing.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unindent does not match any outer indentation level (document_processing.py, line 1071)",
        "lineno": 1071,
        "offset": 33
      }
    },
    {
      "file": "tasks/platform_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "test_3d_pipeline.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "test_ai_integrations.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "test_automation_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "test_automation_systems.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "test_autonomous_system.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "test_avatar_generation.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "test_noise_filter.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "test_ollama_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "test_pipeline.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "test_routes.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "test_server.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "test_system_integrity.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "test_youtube_features.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "tools/audits/rule1_scan.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "tools/base44_debug_guard.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "tools/basic_video_generator.py",
      "actions": [],
      "result": "still_fails",
      "error": {
        "msg": "unindent does not match any outer indentation level (basic_video_generator.py, line 229)",
        "lineno": 229,
        "offset": 26
      }
    },
    {
      "file": "tools/cleanup/rule1_rewrite_suggester.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "tools/cleanup/unused_scan.py",
      "actions": [
        "appended closers at EOF: ))"
      ],
      "result": "still_fails",
      "error": {
        "msg": "invalid syntax (unused_scan.py, line 463)",
        "lineno": 463,
        "offset": 55
      }
    },
    {
      "file": "tools/fix_rule1_loop.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "tools/monitoring_system_launcher.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "tools/rule1_scan_first_party.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "tools/start_local.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "trae_ai_main.py",
      "actions": [
        "closed \"\"\" at EOF"
      ],
      "result": "still_fails",
      "error": {
        "msg": "unterminated string literal (detected at line 23) (trae_ai_main.py, line 23)",
        "lineno": 23,
        "offset": 4
      }
    },
    {
      "file": "trae_batch_rewriter.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "ultimate_lint_fixer_v2.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "ultimate_production_test.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "ultimate_quality_showcase.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "unified_api_router.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "utils/__init__.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "utils/common.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "utils/credit_optimizer.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "utils/http.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "utils/logger.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "utils/logging_config.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "utils/rate_limiter.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "utils/rule1_deep_scanner.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "utils/rule1_enforcer.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "utils/rule1_scanner.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "venv_stable/bin/rst2html.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "venv_stable/bin/rst2html4.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "venv_stable/bin/rst2html5.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "venv_stable/bin/rst2latex.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "venv_stable/bin/rst2man.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "venv_stable/bin/rst2odt.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "venv_stable/bin/rst2odt_prepstyles.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "venv_stable/bin/rst2pseudoxml.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "venv_stable/bin/rst2s5.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "venv_stable/bin/rst2xetex.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "venv_stable/bin/rst2xml.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "venv_stable/bin/rstpep2html.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "verify_cloud_software_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "verify_parse.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "verify_project.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "verify_python_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "view_affiliate_credentials.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "web_enhanced_debugger.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "web_search.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "youtube_integration.py",
      "actions": [],
      "result": "parsed"
    },
    {
      "file": "yt_multi_hook.py",
      "actions": [],
      "result": "parsed"
    }
  ]
}